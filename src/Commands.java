import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;

// Classe comandos extende a classe da API JDA "ListenerAdapter"
public class Commands extends ListenerAdapter {

    // Strings
    String linha; // Linha do arquivo campeoes.txt
    String[] values; // Dados do campe√£o e a frase

    // Booleans
    boolean isQuoteActive = false; // Define se uma opera√ß√£o de falas j√° est√° sendo realizada pelo bot

    // M√©todo para o evento de mensagem recebida no Discord
    public void onMessageReceived(MessageReceivedEvent event) {
        // Criando e instanciando a vari√°vel que armazenar√° a mensagem do usu√°rio,
        // formatando e removendo espa√ßos para garantir a leitura correta da mensagem
        String[] msg = event.getMessage().getContentRaw().split("\\s+", 0);

        // COMANDO PARA VER INFORMA√á√ïES SOBRE O BOT
        if (msg[0].equalsIgnoreCase(Main.prefix + "info")) {
            // Exibe o embed
            event.getChannel().sendMessageEmbeds(
                Instantiators.setEmbed(
                "üíú League of Falas", 
                "Sou um bot que retorna uma fala de um campe√£o de League of Legends para voc√™ tentar descobrir de quem ela √©. Digite **!cmds** para ver todos os comandos.",
                true,
                "üïπ Como jogar", 
                "Execute o comando **!falas** para iniciar uma rodada.\n\n" +
                "Uma frase aparecer√° e voc√™ dever√° descobrir o campe√£o que a disse digitando o nome dele no chat (N√£o precisa de letras mai√∫sculas).\n\n" +
                "**OBS**: Campe√µes de nome composto como \"Lee Sin\" devem ser digitados com um h√≠fen nos espa√ßos. **Ex**: _Lee-Sin_",
                true)
                .build()).queue();
        }

        // COMANDO PARA VER COMANDOS DO BOT
        if (msg[0].equalsIgnoreCase(Main.prefix + "cmds")) {
            // Exibe o embed
            event.getChannel().sendMessageEmbeds(
                Instantiators.setEmbed(
                "üíú League of Falas - Comandos", 
                "prefixo utlizado -> **!**\n\n"
                + "**Comandos**\n"
                + "    ‚óè info - Informa√ß√µes gerais.\n"
                + "    ‚óè cmds - Exibe todos os comandos.\n"
                + "    ‚óè rep - Exibe o link do reposit√≥rio do bot no GitHub.\n"
                + "    ‚óè falas - Retorna uma fala para voc√™ descobrir quem a disse.\n"
                + "    ‚óè falas.off - Desativa a atividade de falas.\n",
                false,
                "",
                "",
                false)
                .build()).queue();
        }

        // COMANDO PARA EXIBIR REPOSIT√ìRIO GITHUB
        if (msg[0].equalsIgnoreCase(Main.prefix + "rep")) {
            event.getChannel().sendMessage("https://github.com/tavinhossaur/league_of_falas_discord_bot").queue();
        }

        // COMANDO PARA DESATIVAR A ATIVIDADE FALAS
        if (msg[0].equalsIgnoreCase(Main.prefix + "falas.off") && isQuoteActive) {
            // Define como desativado o comando
            isQuoteActive = false;
            // E mostra um retorno no chat avisando a altera√ß√£o
            event.getChannel().sendMessage("**Atividade de falas dos campe√µes desativada**").queue();
        }

        // Caso o usu√°rio digite novamente o comando para criar uma nova fala com uma j√° ativa
        if (msg[0].equalsIgnoreCase(Main.prefix + "falas") && isQuoteActive) {
            // Exibe uma mensagem para guiar o usu√°rio na desativa√ß√£o da fala anterior.
            event.getChannel().sendMessage("**J√° h√° uma fala para voc√™ descobrir " + 
            event.getAuthor().getAsMention() + "!**\n\n" + "Se deseja trocar a fala para tentar outra, utilize o comando: **!falas.off**").queue();
        }
        // COMANDO PARA ATIVAR A ATIVIDADE FALAS
        else if (msg[0].equalsIgnoreCase(Main.prefix + "falas")) {
            // Se j√° n√£o tiver uma fala ativa, instancia novos valores para o campe√£o e a fala
            if (!isQuoteActive) values = Instantiators.getRandomChamp();

            // Exibe o embed
            event.getChannel().sendMessageEmbeds(
                Instantiators.setEmbed(
                "Que campe√£o fala isso? ü§î", 
                "_\"" + values[1] + "\"_",
                false,
                "",
                "",
                false)
                .build()).queue();

            // Define como ativo o comando
            isQuoteActive = true;
        }

        // Se o usu√°rio digitar corretamente o campe√£o da fala, esse comando estiver
        // ativo e n√£o seja um bot que enviou a ultima mensagem
        if (msg[0].equalsIgnoreCase(values[0]) && isQuoteActive && !event.getMessage().getAuthor().isBot()) {

            // Confirma√ß√£o de acerto
            event.getChannel().sendMessage("Parab√©ns " + event.getAuthor().getAsMention() + 
            "! Voc√™ acertou!\nCampe√£o: " + "**" + values[0] + "**").queue();

            // Define como desativado o comando
            isQuoteActive = false;
        }
    }
}
